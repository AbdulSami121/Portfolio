{"remainingRequest":"/home/lablnet/Muhammad Umer Farooq/Projects/vuejs/lablnet/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/lablnet/Muhammad Umer Farooq/Projects/vuejs/lablnet/src/pages/Projects.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/lablnet/Muhammad Umer Farooq/Projects/vuejs/lablnet/src/pages/Projects.vue","mtime":1599889283525},{"path":"/home/lablnet/Muhammad Umer Farooq/Projects/vuejs/lablnet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/lablnet/Muhammad Umer Farooq/Projects/vuejs/lablnet/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/lablnet/Muhammad Umer Farooq/Projects/vuejs/lablnet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/lablnet/Muhammad Umer Farooq/Projects/vuejs/lablnet/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBheGlvcyBmcm9tICJheGlvcyI7CmltcG9ydCB1cmwgZnJvbSAiQC91cmwiCgpleHBvcnQgZGVmYXVsdCB7CiAgICBuYW1lOiAncHJvamVlY3RzJywKICAgIGRhdGEoKSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgZGF0YTogW10sCiAgICAgICAgICAgIGxvYWQ6IGZhbHNlLAogICAgICAgICAgICBlcnJvcjogZmFsc2UKICAgICAgICB9CiAgICB9LAogICAgbWV0aG9kczogewogICAgICAgIGxvYWREYXRhKCkgewogICAgICAgICAgICB0aGlzLmRhdGEgPSBbXQogICAgICAgICAgICB0aGlzLmVycm9yID0gZmFsc2UKICAgICAgICAgICAgYXhpb3MuZ2V0KGAke3VybH1kYXRhL3Byb2plY3RzLmpzb24/dGltZXN0YW1wPSR7bmV3IERhdGUoKS5nZXRUaW1lKCl9YCkudGhlbihyZXNwb25zZSA9PiB7CiAgICAgICAgICAgICAgICB0aGlzLmRhdGEgPSAgcmVzcG9uc2UuZGF0YQogICAgICAgICAgICAgICAgdGhpcy5sb2FkID0gdHJ1ZQogICAgICAgICAgICB9KS5jYXRjaChlcnIgPT4gewogICAgICAgICAgICAgICAgdGhpcy5lcnJvciA9IHRydWUKICAgICAgICAgICAgfSkKICAgICAgICB9CiAgICB9LAogICAgbW91bnRlZCgpIHsKICAgICAgICB0aGlzLmxvYWREYXRhKCkKICAgIH0KfQo="},{"version":3,"sources":["Projects.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Projects.vue","sourceRoot":"src/pages","sourcesContent":["<template>\n    <div>\n        <div v-if=\"!error\">\n            <md-progress-bar v-if=\"!load\" class=\"md-accent\" md-mode=\"indeterminate\"></md-progress-bar>\n        </div>\n        <h3 class=\"title\">Projects</h3>\n        <div v-if=\"load\">\n            <div v-for=\"(item, index) in data\" :key=\"index\">\n                <md-card>\n                    <md-card-header>\n                        <md-card-header class=\"card-header-special\" :style=\"item['style']\">\n                            <h4>{{item[\"name\"]}}</h4>\n                        </md-card-header>\n                    </md-card-header>\n                    <div style=\"padding: 16px\">\n                        <p class=\"text-gray\">{{item['desc']}}</p>\n\n                        <h3 class=\"\">Applied technologies</h3>\n                        <span class=\"project-tech\" v-for=\"(value, index) in item['tech']\" :key=\"index\">\n                            <p class=\"\">{{value}}</p>\n                        </span>\n\n                        <span class=\"project-btn\">\n                            <a :href=\"item['github']\">Github</a>\n                        </span>\n                        <span class=\"project-note\">\n                            <p>{{item['note']}}</p>\n                        </span>\n                    </div>\n                </md-card>\n            </div>\n        </div>\n        <div v-if=\"error\">\n            <md-card>\n                <md-card-content>\n                    <h3>Error: unable to load, <a style=\"color:black\" href=\"#!\" @click=\"loadData\">Retry</a> </h3>\n                </md-card-content>\n            </md-card>\n        </div>\n    </div>\n</template>\n\n<script>\n    import axios from \"axios\";\n    import url from \"@/url\"\n\n    export default {\n        name: 'projeects',\n        data() {\n            return {\n                data: [],\n                load: false,\n                error: false\n            }\n        },\n        methods: {\n            loadData() {\n                this.data = []\n                this.error = false\n                axios.get(`${url}data/projects.json?timestamp=${new Date().getTime()}`).then(response => {\n                    this.data =  response.data\n                    this.load = true\n                }).catch(err => {\n                    this.error = true\n                })\n            }\n        },\n        mounted() {\n            this.loadData()\n        }\n    }\n</script>\n"]}]}
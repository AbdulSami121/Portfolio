{"remainingRequest":"/home/lablnet/Muhammad Umer Farooq/Projects/vuejs/lablnet/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/lablnet/Muhammad Umer Farooq/Projects/vuejs/lablnet/src/pages/Contact.vue?vue&type=style&index=0&id=7203ef2c&lang=scss&scoped=true&","dependencies":[{"path":"/home/lablnet/Muhammad Umer Farooq/Projects/vuejs/lablnet/src/pages/Contact.vue","mtime":1599659737969},{"path":"/home/lablnet/Muhammad Umer Farooq/Projects/vuejs/lablnet/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/lablnet/Muhammad Umer Farooq/Projects/vuejs/lablnet/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/lablnet/Muhammad Umer Farooq/Projects/vuejs/lablnet/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/lablnet/Muhammad Umer Farooq/Projects/vuejs/lablnet/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/lablnet/Muhammad Umer Farooq/Projects/vuejs/lablnet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/lablnet/Muhammad Umer Farooq/Projects/vuejs/lablnet/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLm1kLXByb2dyZXNzLWJhciB7CiAgcG9zaXRpb246IGFic29sdXRlOwogIHRvcDogMDsKICByaWdodDogMDsKICBsZWZ0OiAwOwp9Cg=="},{"version":3,"sources":["Contact.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0FA;AACA;AACA;AACA;AACA;AACA","file":"Contact.vue","sourceRoot":"src/pages","sourcesContent":["<template>\n  <div>\n    <form novalidate class=\"md-layout\" @submit.prevent=\"validateData\">\n      <md-card class=\"md-layout-item\" style=\"padding:25px\">\n        <md-card-header>\n            <md-toolbar :md-elevation=\"1\">\n                <span class=\"md-title\">Contact me</span>\n            </md-toolbar>\n        </md-card-header>\n        <md-card-content>\n            <md-field>\n                <label for=\"name\">Name</label>\n                <md-input name=\"name\" id=\"name\" autocomplete=\"given-name\" v-model=\"form.name\" :disabled=\"sending\" />\n                <span class=\"md-error\" v-if=\"form.error\">The name is required</span>\n            </md-field>\n            <md-field>\n                <label for=\"email\">Email</label>\n                <md-input type=\"email\" name=\"email\" id=\"email\" autocomplete=\"email\" v-model=\"form.email\" :disabled=\"sending\" />\n                <span class=\"md-error\" v-if=\"form.error\">The email is required</span>\n            </md-field>\n            <md-field>\n                <label>Message</label>\n                <md-textarea v-model=\"form.comment\" :disabled=\"sending\"></md-textarea>\n            </md-field>\n          </md-card-content>\n          <md-progress-bar md-mode=\"indeterminate\" v-if=\"sending\" />\n          <span class=\"md-caption\">You can expect to recieve my response within 24 hrs.</span>\n        <md-card-actions>\n          <md-button type=\"submit\" class=\"md-primary\" :disabled=\"sending\">Send</md-button>\n        </md-card-actions>\n      </md-card>\n      <md-snackbar :md-active.sync=\"send\">{{resp}}</md-snackbar>\n    </form>\n  </div>\n</template>\n<script>\n  import axios from \"axios\";\n\n  export default {\n    name: 'Contact',\n    data: () => ({\n      form: {\n        name: null,\n        email: null,\n        comment: null,\n        error: false\n      },\n      send: false,\n      sending: false,\n      resp: \"\"\n    }),\n\n    methods: {\n      clearForm () {\n        this.form.name = null\n        this.form.email = null\n        this.form.comment = null\n      },\n      sent () {\n        this.sending = true\n        axios.post(\"https://formspree.io/mlepqodq\", {\n            name: this.form.name,\n            _replyto: this.form.email,\n            message: this.form.comment\n        }).then(response => {\n            this.resp = \"The form submitted successfully!\"\n            this.send = true\n            this.sending = false\n            this.clearForm()\n        }).catch(err => {\n            this.resp = \"Can't send an empty form\"\n            this.send = true\n            this.sending = false\n            this.clearForm()\n        })\n      },\n      validateData () {\n        //validate\n        let valid = true\n        if (valid) {\n          this.sent()\n        } else {\n            this.error = true\n        }\n      }\n    }\n  }\n</script>\n\n<style lang=\"scss\" scoped>\n  .md-progress-bar {\n    position: absolute;\n    top: 0;\n    right: 0;\n    left: 0;\n  }\n</style>"]}]}
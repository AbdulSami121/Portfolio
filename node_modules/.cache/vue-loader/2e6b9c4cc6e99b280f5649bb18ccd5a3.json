{"remainingRequest":"/home/lablnet/Muhammad Umer Farooq/Projects/vuejs/lablnet/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/lablnet/Muhammad Umer Farooq/Projects/vuejs/lablnet/src/pages/Services.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/lablnet/Muhammad Umer Farooq/Projects/vuejs/lablnet/src/pages/Services.vue","mtime":1599902235147},{"path":"/home/lablnet/Muhammad Umer Farooq/Projects/vuejs/lablnet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/lablnet/Muhammad Umer Farooq/Projects/vuejs/lablnet/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/lablnet/Muhammad Umer Farooq/Projects/vuejs/lablnet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/lablnet/Muhammad Umer Farooq/Projects/vuejs/lablnet/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCiAgaW1wb3J0IGF4aW9zIGZyb20gImF4aW9zIjsKICBpbXBvcnQgdXJsIGZyb20gIkAvdXJsIgoKICBleHBvcnQgZGVmYXVsdCB7CiAgICAgIG5hbWU6ICdzZXJ2aWNlcycsCiAgICAgIGRhdGEoKSB7CiAgICAgIHJldHVybiB7CiAgICAgICAgZm9ybTogewogICAgICAgIG5hbWU6IG51bGwsCiAgICAgICAgZW1haWw6IG51bGwsCiAgICAgICAgY29tbWVudDogbnVsbCwKICAgICAgICBlcnJvcjogZmFsc2UKICAgICAgfSwKICAgICAgZGF0YTogW10sCiAgICAgIGxvYWQ6IGZhbHNlLAogICAgICBlcnJvcjogZmFsc2UsCiAgICAgIGFjdGl2ZTogJ2ZpcnN0JywKICAgICAgZmlyc3Q6IGZhbHNlLAogICAgICBzZWNvbmQ6IGZhbHNlLAogICAgICB0aGlyZDogZmFsc2UsCiAgICAgIHNlbmQ6IGZhbHNlLAogICAgICBzZW5kaW5nOiBmYWxzZSwKICAgICAgcmVzcDogIiIKICAgIH0gICAKICB9LAogIG1ldGhvZHM6IHsKICAgIGNsZWFyRm9ybSAoKSB7CiAgICAgIHRoaXMuZm9ybS5uYW1lID0gbnVsbAogICAgICB0aGlzLmZvcm0uZW1haWwgPSBudWxsCiAgICAgIHRoaXMuZm9ybS5jb21tZW50ID0gbnVsbAogICAgfSwKICAgIHNlbnQgKCkgewogICAgICB0aGlzLnNlbmRpbmcgPSB0cnVlCiAgICAgIGF4aW9zLnBvc3QoImh0dHBzOi8vZm9ybXNwcmVlLmlvL21lcXBqamJ6IiwgewogICAgICAgICAgbmFtZTogdGhpcy5mb3JtLm5hbWUsCiAgICAgICAgICBfcmVwbHl0bzogdGhpcy5mb3JtLmVtYWlsLAogICAgICAgICAgbWVzc2FnZTogdGhpcy5mb3JtLmNvbW1lbnQKICAgICAgfSkudGhlbihyZXNwb25zZSA9PiB7CiAgICAgICAgICB0aGlzLnJlc3AgPSAiVGhlIGZvcm0gc3VibWl0dGVkIHN1Y2Nlc3NmdWxseSEiCiAgICAgICAgICB0aGlzLnNlbmQgPSB0cnVlCiAgICAgICAgICB0aGlzLnNlbmRpbmcgPSBmYWxzZQogICAgICAgICAgdGhpcy5jbGVhckZvcm0oKQogICAgICAgICAgdGhpcy5zZXREb25lKCIiLCAiZmlyc3QiKQogICAgICB9KS5jYXRjaChlcnIgPT4gewogICAgICAgICAgdGhpcy5yZXNwID0gIkNhbid0IHNlbmQgYW4gZW1wdHkgZm9ybSIKICAgICAgICAgIHRoaXMuc2VuZCA9IHRydWUKICAgICAgICAgIHRoaXMuc2VuZGluZyA9IGZhbHNlCiAgICAgICAgICB0aGlzLmNsZWFyRm9ybSgpCiAgICAgICAgICB0aGlzLnNldERvbmUoIiIsICJmaXJzdCIpCiAgICAgIH0pCiAgICB9LAogICAgdmFsaWRhdGVEYXRhICgpIHsKICAgICAgLy92YWxpZGF0ZQogICAgICB0aGlzLmZvcm0uZXJyb3IgPSBmYWxzZQogICAgICBpZiAodGhpcy5mb3JtLm5hbWUgPT09ICcnIHx8IHRoaXMuZm9ybS5uYW1lID09PSBudWxsIHx8IHRoaXMuZm9ybS5uYW1lID09PSAwIHx8IHRoaXMuZm9ybS5lbWFpbCA9PT0gJycgfHwgdGhpcy5mb3JtLmVtYWlsID09PSBudWxsIHx8IHRoaXMuZm9ybS5lbWFpbCA9PT0gMCB8fCB0aGlzLmZvcm0uY29tbWVudCA9PT0gJycgfHwgdGhpcy5mb3JtLmNvbW1lbnQgPT09IG51bGwgfHwgdGhpcy5mb3JtLmNvbW1lbnQgPT09IDApewogICAgICAgICAgdGhpcy5mb3JtLmVycm9yID0gdHJ1ZQogICAgICAgICAgdGhpcy5zZXREb25lKCIiLCAiZmlyc3QiKQogICAgICAgICAgcmV0dXJuOwogICAgICB9CiAgICAgIHRoaXMuc2VudCgpCiAgICB9LAogICAgbG9hZERhdGEoKSB7CiAgICAgICAgdGhpcy5kYXRhID0gW10KICAgICAgICB0aGlzLmVycm9yID0gZmFsc2UKICAgICAgICBheGlvcy5nZXQoYCR7dXJsfWRhdGEvc2VydmljZXMuanNvbj90aW1lc3RhbXA9JHtuZXcgRGF0ZSgpLmdldFRpbWUoKX1gKS50aGVuKHJlc3BvbnNlID0+IHsKICAgICAgICAgICAgdGhpcy5kYXRhID0gIHJlc3BvbnNlLmRhdGEKICAgICAgICAgICAgdGhpcy5sb2FkID0gdHJ1ZQogICAgICAgIH0pLmNhdGNoKGVyciA9PiB7CiAgICAgICAgICAgIHRoaXMuZXJyb3IgPSB0cnVlCiAgICAgICAgfSkKICAgIH0sCiAgICBzZXREb25lIChpZCwgaW5kZXgpIHsKICAgICAgdGhpc1tpZF0gPSB0cnVlCiAgICAgICAgaWYgKGluZGV4KSB7CiAgICAgICAgICB0aGlzLmFjdGl2ZSA9IGluZGV4CiAgICAgICAgfQogICAgICB9LAogICAgfSwKICBjb21wdXRlZDogewogICAgbWVzc2FnZUNsYXNzICgpIHsKICAgICAgcmV0dXJuIHsKICAgICAgICAnbWQtaW52YWxpZCc6IHRoaXMuZm9ybS5lcnJvcgogICAgICB9CiAgICB9CiAgfSwKICBtb3VudGVkKCkgewogICAgICB0aGlzLmxvYWREYXRhKCkKICB9Cn0K"},{"version":3,"sources":["Services.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Services.vue","sourceRoot":"src/pages","sourcesContent":["<template>\n    <div>\n        <div v-if=\"!error\">\n            <md-progress-bar v-if=\"!load\" class=\"md-accent\" md-mode=\"indeterminate\"></md-progress-bar>\n        </div>\n        <h3 class=\"title\">Services</h3>\n        <div v-if=\"load\">\n            <div v-for=\"(item, index) in data\" :key=\"index\">\n                <md-card>\n                    <md-card-header>\n                        <md-card-header class=\"card-header-special\" :style=\"item['style']\">\n                            <h4>{{item[\"name\"]}}</h4>\n                        </md-card-header>\n                    </md-card-header>\n                    <md-card-content>\n                        <p class=\"text-gray\">{{item['desc']}}</p>\n                    </md-card-content>\n                </md-card>\n            </div>\n        </div>\n        <div>\n            <h3 class=\"title\">Order</h3>\n            <div>\n              <md-steppers :md-active-step.sync=\"active\" md-linear>\n                <md-step id=\"first\" md-label=\"First Step\" md-description=\"Personal Info\" :md-done.sync=\"first\">\n                  <md-field :class=\"messageClass\">\n                    <label for=\"name\">Name</label>\n                    <md-input name=\"name\" id=\"name\" autocomplete=\"given-name\" v-model=\"form.name\" :disabled=\"sending\" />\n                    <span class=\"md-error\" v-if=\"form.error\">All fields are required</span>\n                  </md-field>\n                  <md-field :class=\"messageClass\">\n                      <label for=\"email\">Email</label>\n                      <md-input type=\"email\" name=\"email\" id=\"email\" autocomplete=\"email\" v-model=\"form.email\" :disabled=\"sending\" />\n                      <span class=\"md-error\" v-if=\"form.error\">All fields are required</span>\n                  </md-field>\n                  <md-button class=\"md-raised md-primary\" @click=\"setDone('first', 'second')\">Continue</md-button>\n                </md-step>\n                <md-step id=\"second\" md-label=\"Second Step\" md-description=\"Project Info\" :md-done.sync=\"second\">\n                      <md-field :class=\"messageClass\">\n                        <label>Message</label>\n                        <md-textarea v-model=\"form.comment\" :disabled=\"sending\"></md-textarea>\n                        <span class=\"md-error\" v-if=\"form.error\">All fields are required</span>\n                      </md-field>\n                  <md-button class=\"md-raised md-primary\" @click=\"setDone('second', 'third')\">Continue</md-button>\n                </md-step>\n                <md-step id=\"third\" md-label=\"Third Step\" md-description=\"submit\" :md-done.sync=\"third\">\n                  <div>\n                    <span class=\"md-caption\">You can expect to recieve my response within 24 hrs.</span>\n                  </div>\n                  <md-button class=\"md-raised md-primary\" @click=\"validateData\" :disabled=\"sending\">Done</md-button>\n                </md-step>\n              </md-steppers>\n            </div>\n        </div>\n        <div v-if=\"error\">\n            <md-card>\n                <md-card-content>\n                    <h3>Error: unable to load, <a style=\"color:black\" href=\"#!\" @click=\"loadData\">Retry</a> </h3>\n                </md-card-content>\n            </md-card>\n        </div>\n        <md-snackbar :md-active.sync=\"send\">{{resp}}</md-snackbar>\n    </div>\n</template>\n\n<script>\n    import axios from \"axios\";\n    import url from \"@/url\"\n\n    export default {\n        name: 'services',\n        data() {\n        return {\n          form: {\n          name: null,\n          email: null,\n          comment: null,\n          error: false\n        },\n        data: [],\n        load: false,\n        error: false,\n        active: 'first',\n        first: false,\n        second: false,\n        third: false,\n        send: false,\n        sending: false,\n        resp: \"\"\n      }   \n    },\n    methods: {\n      clearForm () {\n        this.form.name = null\n        this.form.email = null\n        this.form.comment = null\n      },\n      sent () {\n        this.sending = true\n        axios.post(\"https://formspree.io/meqpjjbz\", {\n            name: this.form.name,\n            _replyto: this.form.email,\n            message: this.form.comment\n        }).then(response => {\n            this.resp = \"The form submitted successfully!\"\n            this.send = true\n            this.sending = false\n            this.clearForm()\n            this.setDone(\"\", \"first\")\n        }).catch(err => {\n            this.resp = \"Can't send an empty form\"\n            this.send = true\n            this.sending = false\n            this.clearForm()\n            this.setDone(\"\", \"first\")\n        })\n      },\n      validateData () {\n        //validate\n        this.form.error = false\n        if (this.form.name === '' || this.form.name === null || this.form.name === 0 || this.form.email === '' || this.form.email === null || this.form.email === 0 || this.form.comment === '' || this.form.comment === null || this.form.comment === 0){\n            this.form.error = true\n            this.setDone(\"\", \"first\")\n            return;\n        }\n        this.sent()\n      },\n      loadData() {\n          this.data = []\n          this.error = false\n          axios.get(`${url}data/services.json?timestamp=${new Date().getTime()}`).then(response => {\n              this.data =  response.data\n              this.load = true\n          }).catch(err => {\n              this.error = true\n          })\n      },\n      setDone (id, index) {\n        this[id] = true\n          if (index) {\n            this.active = index\n          }\n        },\n      },\n    computed: {\n      messageClass () {\n        return {\n          'md-invalid': this.form.error\n        }\n      }\n    },\n    mounted() {\n        this.loadData()\n    }\n  }\n</script>\n"]}]}